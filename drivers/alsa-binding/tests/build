#! /bin/bash
###############################################################################
#                                                                             #
#                                  Alice                                      #
#                                                                             #
#                            Tests Build Script                               #
#                                                                             #
#                       Copyright (C) 2012-, AdaHeads K/S                     #
#                                                                             #
#  This is free software;  you can redistribute it  and/or modify it          #
#  under terms of the  GNU General Public License as published  by the        #
#  Free Software  Foundation;  either version 3,  or (at your option) any     #
#  later version.  This software is distributed in the hope  that it will     #
#  be useful, but WITHOUT ANY WARRANTY;  without even the implied warranty    #
#  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU        #
#  General Public License for  more details.                                  #
#  You should have  received  a copy of the GNU General  Public  License      #
#  distributed  with  this  software;   see  file COPYING3.  If not, go       #
#  to http://www.gnu.org/licenses for a complete copy of the license.         #
#                                                                             #
###############################################################################

cd "$(dirname "$0")" || exit -1

if [ -z "${PROCESSORS}" ]; then
   PROCESSORS=$((test -f /proc/cpuinfo && grep -c ^processor /proc/cpuinfo) || echo 1)
fi

failed_list=$(mktemp)
succeeded_list=$(mktemp)

number_of_builds=$(find ./ -mindepth 2 -type f -name \*.gpr | wc -l)
build_number=0

echo -n "Building tests...  "

for file in $(find ./ -mindepth 2 -type f -name \*.gpr | sort); do
   let build_number++

   echo ${build_number}/${number_of_builds}$'\tBuilding '${file}'...' 1>&2

   rm -f "$(dirname "${file}")"/*.{o,ali}

   if gnatmake -j${PROCESSORS} -p -P ${file} 1>${file}.output \
                                             2>${file}.errors; then
      echo ${build_number}/${number_of_builds}$'\tBuild succeeded' 1>&2

      echo ${file} >> ${succeeded_list}
   else
      echo ${build_number}/${number_of_builds}$'\tBuild failed' 1>&2

      echo ${file} >>    ${failed_list}
   fi
done \
  2>build.status

total=$(cat ${succeeded_list} ${failed_list} | wc -l)
failed=$(cat ${failed_list} | wc -l)

if [ -s ${failed_list} ]; then
   echo "${failed} out of ${total} builds failed:"
   uniq < ${failed_list} | sed 's/^./   gnatmake -p -P tests/;'
else
   echo "All ${total} builds succeeded."
fi

rm -f ${failed_list} ${succeeded_list}

exit ${failed}
