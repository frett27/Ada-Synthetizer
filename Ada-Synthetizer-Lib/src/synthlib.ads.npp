------------------------------------------------------------------------------
--                              Synthetizer                                 --
--                                                                          --
--                         Copyright (C) 2015-2019                          --
--                                                                          --
--  Authors: Patrice Freydiere                                              --
--                                                                          --
--  This library is free software; you can redistribute it and/or modify    --
--  it under the terms of the GNU General Public License as published by    --
--  the Free Software Foundation; either version 2 of the License, or (at   --
--  your option) any later version.                                         --
--                                                                          --
--  This library is distributed in the hope that it will be useful, but     --
--  WITHOUT ANY WARRANTY; without even the implied warranty of              --
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU       --
--  General Public License for more details.                                --
--                                                                          --
--  You should have received a copy of the GNU General Public License       --
--  along with this library; if not, write to the Free Software Foundation, --
--  Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.          --
--                                                                          --
------------------------------------------------------------------------------

with Synth.Synthetizer;

with Interfaces.C;
with Interfaces.C.Strings;

package SynthLib is

   type API_Synth is private;

   type API_Synth_Access is access all API_Synth;

   subtype API_Synthetizer_Time is Synth.Synthetizer.Synthetizer_Time;
   subtype API_Voice is Synth.Synthetizer.Voice;

   type BufferPrepare_CallBack is access procedure (S : API_Synth_Access;
      Current_Buffer_Time, Next_Buffer_Time           : API_Synthetizer_Time);

   -- synthetizer initialization
   procedure Synthetizer_Init (S : in out API_Synth_Access;
      Call_Back                  : in     BufferPrepare_CallBack);

   -- synthetize resource freeze
   procedure Synthetizer_Close (S : in out API_Synth_Access);

   -- sound handling

   -- procedure Synthetizer_Load_Wav_Sample(Filename: Interfaces.C.Strings.chars_ptr; Sample_No: out Natural);
   -- procedure Synthetizer_Free_Sample(Sample_No: Natural);

   procedure Synthetizer_Play (S : in out API_Synth_Access;
      Sample_No : in     Natural; Frequency : in Interfaces.C.C_float;
      Voice_Result               :    out API_Voice);

   procedure Synthetizer_Timed_Play(S: in out API_Synth_Access;
                                Sample_No: in Natural;
                                      Frequency : in Interfaces.C.C_float;
                                        T: in API_Synthetizer_Time;
                                Voice : out API_Voice);

   procedure Synthetizer_Stop (S : in out API_Synth_Access;
      Voice_No                   : in     API_Voice);

     procedure Synthetizer_Timed_Stop(S: API_Synth_Access;
                                      Voice : out API_Voice;
                                      T: API_Synthetizer_Time);

   -- test method for testing calling convention
   procedure ValidateCall;

private

   pragma Export (C, ValidateCall);

   pragma Export (C, Synthetizer_Init);
   pragma Export (C, Synthetizer_Play);

   pragma Export (C, Synthetizer_Close);

   pragma Convention (C, BufferPrepare_CallBack);

   type API_Synth is record
      S        : Synth.Synthetizer.Synthetizer_Access;
      Callback : BufferPrepare_CallBack;
   end record;

   type Sound_Sample_Array is array (Positive range <>) of Synth.SoundSample;
   MAX_SOUND_SAMPLE    : constant Positive := 100;
   SoundSample_Buffers : Sound_Sample_Array (1 .. MAX_SOUND_SAMPLE);

   API_No_Voice : constant Natural := 0;

end SynthLib;
